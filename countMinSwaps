#include <iostream>
#include<algorithm>
#include <vector>
using namespace std;

int countMinSwaps(vector<int> arr){
    //know actual position of elements(sorting)
    //store the current indices
    int n = arr.size();
    pair<int,int> ap[n];
    for(int i=0;i<n;i++){
        ap[i].first = arr[i];
        ap[i].second = i;
    }
    //sorting
    sort(ap,ap+n);
    
    //main logic
    vector<bool> visited(n,false);
    int ans = 0;
    
    for(int i=0;i<n;i++){
        //if element is visited or it is in the correct position
        int old_position = ap[i].second;
        if(visited[i] == true or i==old_position){
            continue;
        }
        //visiting element(index) for the first time
        int node = i;
        int cycle = 0;
        while(!visited[node]){
            visited[node] = true;
            int next_node = ap[node].second;
            node = next_node;
            cycle+=1;
        }
        ans += (cycle - 1);
    }
    return ans;
}

int main() {
    vector<int> arr = {2,4,5,1,3,7,6};
    cout<< countMinSwaps(arr);
    return 0;
}
